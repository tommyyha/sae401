{% extends 'base.html.twig' %}
{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.comment-form').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const publicationId = formData.get('publicationId');
            const content = formData.get('content');

            fetch('/api/commentaire', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ content: content, publicationId: publicationId })
            })
            .then(response => response.json())
            .then(data => {
                if(data.error) {
                    console.error(data.error);
                } else {
                window.location.reload();
                }
            })
            .catch(error => console.error('Erreur:', error));
        });
    });
    document.getElementById('commentForm').addEventListener('submit', function() {
        // Trouvez le bouton de soumission dans le formulaire
        var submitButton = this.querySelector('button[type="submit"]');
        // Désactivez le bouton
        submitButton.disabled = true;
        // Changez le texte du bouton pour informer l'utilisateur
        submitButton.textContent = 'Envoi en cours...';
    });
document.querySelectorAll('.like-btn').forEach(button => {
    button.addEventListener('click', function(e) {
        const publicationId = this.dataset.publicationId;
        fetch(`/like/publication/${publicationId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ like: true }) // Assurez-vous que cela correspond à ce que votre backend attend
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const likesCountElement = this.previousElementSibling;
                let likesCount = parseInt(likesCountElement.textContent);
                if (this.textContent === 'Like') {
                    likesCountElement.textContent = `${++likesCount} likes`;
                    this.textContent = 'Liked';
                } else {
                    likesCountElement.textContent = `${--likesCount} likes`;
                    this.textContent = 'Like';
                }
            } else {
                alert('Une erreur est survenue.');
            }
        })
        .catch(error => console.error('Erreur:', error));
    });
});


});
</script>
{% endblock %}
{% block body %}
    <h1>Résultats de recherche pour "{{ query }}"</h1>

<h2>Publications</h2>
<div>
    {% for data in publicationsData %}
        <div>
            <p>Posté par : {{ data.publication.userID.username | escape }}</p>
            <a href="{{ path('app_profil', {username: data.publication.userID.username}) }}">
            <img src="{{ asset('uploads/' ~ data.publication.userID.profilePicture) }}" alt="Profil de {{ data.publication.userID.username | escape }}" style="width: 40px;"></a>

            <p>{{ data.publication.dateTime|date('Y-m-d H:i') }}</p>
            <p>{{ data.publication.postType | escape }}</p>

            {% if data.fileType == 'image' %}
                <img src="{{ asset('uploads/' ~ data.publication.postContent) }}" alt="Publication">
            {% elseif data.fileType == 'video' %}
                <video controls src="{{ asset('uploads/' ~ data.publication.postContent) }}"></video>
            {% endif %}
            {% if data.isLikedByCurrentUser %}
            <button onclick="location.href='{{ path('like_publication', {'id': data.publication.id}) }}'">DisLike</button>
            {% else %}
                <button onclick="location.href='{{ path('like_publication', {'id': data.publication.id}) }}'">Like</button>
            {% endif %}
            <span>{{ data.likesCount }} likes</span>
             {% if data.likers|length > 0 %}
            <p>Liked by:</p>
            <ul>
            {% for liker in data.likers %}
                    <img src="{{ asset('uploads/' ~ liker.ProfilePicture) }}" alt="profil" style="width: 25px;">
                    <li>{{ liker.Username }}</li>
                
            {% endfor %}

            </ul>
            {% endif %}

            <!-- The comments section might need adjustment based on how you store and access comments in your data model -->
            <div>
                {% for commentaire in data.publication.commentaires %}
                    <p>
                        <img src="{{ asset('uploads/' ~ commentaire.userID.profilePicture) }}" alt="Profil de {{ commentaire.userID.username | escape }}" style="width: 25px;">
                        {{ commentaire.userID.username | escape }}: {{ commentaire.content | escape }}
                        <span style="font-size: 10px;">{{ commentaire.dateTime|date('Y-m-d H:i') }}</span>
                    </p>
                {% endfor %}
            </div>

            <form id="commentForm" class="comment-form" data-publication-id="{{ data.publication.id }}" action="" method="post">
                <input type="text" name="content" placeholder="Ajoutez un commentaire..." required>
                <input type="hidden" name="publicationId" value="{{ data.publication.id }}">
                <button type="submit">Commenter</button>
            </form>
        </div>
    {% else %}
        <p>Acune Publication trouvée.</p>
    {% endfor %}
</div>

    <h2>Profils</h2>
    {% for user in users %}
        <div>{{ user.username }}: {{ user.email }}</div>
    {% else %}
        <p>Aucun profil trouvé.</p>
    {% endfor %}
{% endblock %}
